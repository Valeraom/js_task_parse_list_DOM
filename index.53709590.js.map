{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAGQ,EAHF,EAAc,SAAS,aAAa,CAAC,MAmB3C,SAAS,EAAc,CAAM,EAC3B,MAAO,CAAC,EAAO,OAAO,CAAC,IAAK,IAAI,UAAU,CAAC,IAAK,GAClD,CAhBE,CAFM,EAAa,EAAG,AAmCf,EAnCoB,QAAQ,GAEzB,IAAI,CAAC,SAAC,CAAA,CAAO,CAAvB,EACE,IAAM,EAAiB,EAAc,EAAM,OAAO,CAAC,MAAM,EAGzD,OAAO,AAFgB,EAAc,EAAM,OAAO,CAAC,MAAM,EAEjC,CAC1B,GAEA,AA0BO,EA1BF,SAAS,CAAG,GAEjB,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA4B,OAAA,AAwBrB,EAxB0B,MAAM,CAAC,E,GAYjC,AAFY,EAAG,AAeX,EAfgB,QAAQ,EAElB,GAAG,CAAC,SAAC,CAAtB,EACE,IAAkC,EAAA,EAAK,OAAO,CAAtC,EAA0B,EAA1B,QAAA,CAAU,EAAgB,EAAhB,MAAA,CAAQ,EAAQ,EAAR,GAA1B,CAEA,MAAO,CACL,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAA,EACA,OAAQ,EAAc,GACtB,IAAA,CACF,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar listElement = document.querySelector(\"ul\");\nfunction sortList(list) {\n    var listItems = _to_consumable_array(list.children);\n    listItems.sort(function(item1, item2) {\n        var convertedItem1 = convertSalary(item1.dataset.salary);\n        var convertedItem2 = convertSalary(item2.dataset.salary);\n        return convertedItem2 - convertedItem1;\n    });\n    list.innerHTML = \"\";\n    listItems.forEach(function(item) {\n        return list.append(item);\n    });\n    return list;\n}\nfunction convertSalary(salary) {\n    return +salary.replace(\"$\", \"\").replaceAll(\",\", \"\");\n}\nfunction getEmployees(list) {\n    var listItems = _to_consumable_array(list.children);\n    return listItems.map(function(item) {\n        var _item_dataset = item.dataset, position = _item_dataset.position, salary = _item_dataset.salary, age = _item_dataset.age;\n        return {\n            name: item.textContent.trim(),\n            position: position,\n            salary: convertSalary(salary),\n            age: age\n        };\n    });\n}\nsortList(listElement);\ngetEmployees(listElement);\n\n//# sourceMappingURL=index.53709590.js.map\n","'use strict';\n\nconst listElement = document.querySelector('ul');\n\nfunction sortList(list) {\n  const listItems = [...list.children];\n\n  listItems.sort((item1, item2) => {\n    const convertedItem1 = convertSalary(item1.dataset.salary);\n    const convertedItem2 = convertSalary(item2.dataset.salary);\n\n    return convertedItem2 - convertedItem1;\n  });\n\n  list.innerHTML = '';\n\n  listItems.forEach((item) => list.append(item));\n\n  return list;\n}\n\nfunction convertSalary(salary) {\n  return +salary.replace('$', '').replaceAll(',', '');\n}\n\nfunction getEmployees(list) {\n  const listItems = [...list.children];\n\n  return listItems.map((item) => {\n    const { position, salary, age } = item.dataset;\n\n    return {\n      name: item.textContent.trim(),\n      position,\n      salary: convertSalary(salary),\n      age,\n    };\n  });\n}\n\nsortList(listElement);\ngetEmployees(listElement);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","listItems","listElement","document","querySelector","convertSalary","salary","replace","replaceAll","list","children","sort","item1","item2","convertedItem1","dataset","convertedItem2","innerHTML","forEach","item","append","map","_item_dataset","position","age","textContent","trim"],"version":3,"file":"index.53709590.js.map"}